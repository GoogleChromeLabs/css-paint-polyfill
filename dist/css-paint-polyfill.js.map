{"version":3,"file":"css-paint-polyfill.js","sources":["../src/util.js","../src/index.js","../src/realm.js"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Canvas#toBlob() ponyfill */\nexport function canvasToBlob(canvas, callback, type, quality) {\n\tif (canvas.toBlob) return canvas.toBlob(callback, type, quality);\n\n\tlet bin = atob(canvas.toDataURL(type, quality).split(',')[1]),\n\t\tarr = new Uint8Array(bin.length);\n\tfor (let i=0; i<bin.length; i++) arr[i] = bin.charCodeAt(i);\n\tcallback(new Blob([arr], { type }));\n}\n\n/** Basically fetch(u).then( r => r.text() ) */\nexport function fetchText(url, callback) {\n\tlet xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = () => {\n\t\tif (xhr.readyState===4) {\n\t\t\tcallback(xhr.responseText);\n\t\t}\n\t};\n\txhr.open('GET', url, true);\n\txhr.send();\n}\n\n/** Object.defineProperty() ponyfill */\nexport function defineProperty(obj, name, def) {\n\tif (Object.defineProperty) {\n\t\tObject.defineProperty(obj, name, def);\n\t}\n\telse {\n\t\tobj[name] = def.get();\n\t}\n}\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Realm } from './realm';\nimport { defineProperty, fetchText } from './util';\n\nlet paintWorklet;\n\n// Use a getter here (if available) to avoid installing\n// our MutationObserver if the API is never used.\nif (!window.CSS) window.CSS = {};\n\nif (!('paintWorklet' in window.CSS)) {\n\tdefineProperty(window.CSS, 'paintWorklet', {\n\t\tget: () => (paintWorklet || (paintWorklet = new PaintWorklet()))\n\t});\n}\n\nconst GLOBAL_ID = 'css-paint-polyfill';\n\nlet root = document.createElement(GLOBAL_ID);\nroot.style.cssText = 'display: none;';\ndocument.documentElement.appendChild(root);\n\nlet styleIsolationFrame = document.createElement('iframe');\nstyleIsolationFrame.style.cssText = 'position:absolute; left:0; top:-999px; width:1px; height:1px;';\nroot.appendChild(styleIsolationFrame);\n\nlet overridesStylesheet = document.createElement('style');\noverridesStylesheet.id = GLOBAL_ID;\noverridesStylesheet.$$isPaint = true;\nroot.appendChild(overridesStylesheet);\nlet overrideStyles = overridesStylesheet.sheet;\nlet testStyles = root.style;\n\nconst EMPTY_ARRAY = [];\nconst HAS_PAINT = /(paint\\(|-moz-element\\(#paint-|-webkit-canvas\\(paint-|[('\"]blob:[^'\"#]+#paint=|[('\"]data:image\\/paint-)/;\nconst USE_CSS_CANVAS_CONTEXT = 'getCSSCanvasContext' in document;\nconst USE_CSS_ELEMENT = (testStyles.backgroundImage = `-moz-element(#${GLOBAL_ID})`) === testStyles.backgroundImage;\nconst HAS_PROMISE = (typeof Promise === 'function');\ntestStyles.cssText = '';\n\nlet supportsStyleMutations = true;\nlet raf = window.requestAnimationFrame || setTimeout;\nlet defer = HAS_PROMISE ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\nlet getDevicePixelRatio = () => window.devicePixelRatio || 1;\n\nlet painters = {};\nlet trackedRules = {};\nlet styleSheetCounter = 0;\n\naddEventListener('resize', () => {\n\tprocessItem('[data-css-paint]', true);\n});\n\nfunction registerPaint(name, Painter, worklet) {\n\t// if (painters[name]!=null) throw Error(`registerPaint(${name}): name already registered`);\n\tpainters[name] = {\n\t\tworklet,\n\t\tPainter,\n\t\tproperties: Painter.inputProperties ? [].slice.call(Painter.inputProperties) : [],\n\t\tbit: 0,\n\t\tinstances: []\n\t};\n\tupdate();\n}\n\nfunction getPainter(name) {\n\tlet painter = painters[name];\n\t// if (painter == null) throw Error(`No paint defined for \"${name}\"`);\n\treturn painter;\n}\n\nfunction getPainterInstance(painter) {\n\t// Alternate between two instances.\n\t// @TODO should alternate between two *worklets*. Class instances are meaningless for perf.\n\tlet inst = painter.bit ^= 1;\n\treturn painter.instances[inst] || (painter.instances[inst] = new painter.Painter());\n}\n\nfunction paintRuleWalker(rule, context) {\n\tlet css = rule.cssText;\n\n\tif (context.isNew === true && HAS_PAINT.test(css)) {\n\t\tif (css !== (css = escapePaintRules(css))) {\n\t\t\trule = replaceRule(rule, css);\n\t\t}\n\t}\n\n\tlet selector = rule.selectorText,\n\t\tcssText = getCssText(rule.style),\n\t\tindex, key, cached;\n\n\tif (context.counters[selector] == null) {\n\t\tindex = context.counters[selector] = 1;\n\t}\n\telse {\n\t\tindex = ++context.counters[selector];\n\t}\n\tkey = 'sheet' + context.sheetId + '\\n' + selector + '\\n' + index;\n\tif (trackedRules[key] != null) {\n\t\tcached = trackedRules[key];\n\t\tif (cached.selector === selector) {\n\t\t\tcached.rule = rule;\n\t\t\tif (cached.cssText !== cssText) {\n\t\t\t\tcontext.toProcess.push(cached);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tcontext.toRemove.push(cached);\n\t}\n\telse {\n\t\tcached = trackedRules[key] = { key, selector, cssText, properties: {}, rule };\n\t\tcontext.toProcess.push(cached.selector);\n\t}\n}\n\nfunction walk(node, iterator) {\n\tif ('ownerSVGElement' in node) return;\n\titerator(node);\n\tlet child = node.firstElementChild;\n\twhile (child) {\n\t\twalk(child, iterator);\n\t\tchild = child.nextElementSibling;\n\t}\n}\n\nfunction update() {\n\tlet sheets = [].slice.call(document.styleSheets),\n\t\tcontext = {\n\t\t\ttoProcess: [],\n\t\t\ttoRemove: [],\n\t\t\tcounters: {},\n\t\t\tisNew: false,\n\t\t\tsheetId: null\n\t\t};\n\n\tfor (let i=0; i<sheets.length; i++) {\n\t\tlet node = sheets[i].ownerNode;\n\t\tif (node.$$isPaint) continue;\n\n\t\t// Check that we can access the sheet.\n\t\t// The rules binding is required in order to prevent Terser from removing the block.\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tlet rules;\n\t\ttry { rules = node.sheet.cssRules; }\n\t\tcatch (e) { continue; }\n\n\t\tcontext.sheetId = node.$$paintid;\n\t\tcontext.isNew = context.sheetId == null;\n\t\tif (context.isNew) {\n\t\t\tcontext.sheetId = node.$$paintid = ++styleSheetCounter;\n\t\t\t// allow processing to defer parse\n\t\t\tif (processNewSheet(node)===false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\twalkStyles(node.sheet, paintRuleWalker, context);\n\t}\n\n\tfor (let i = context.toRemove.length; i--; ) {\n\t\t// @todo cleanup?\n\t\tdelete trackedRules[context.toRemove[i].key];\n\t}\n\n\tif (context.toProcess.length>0) {\n\t\tprocessItem(context.toProcess.join(', '));\n\t}\n}\n\nfunction walkStyles(sheet, iterator, context) {\n\tlet stack = [[0, sheet.cssRules]],\n\t\tcurrent = stack[0],\n\t\trules = current[1];\n\tif (rules) {\n\t\tfor (let j=0; stack.length>0; j++) {\n\t\t\tif (j>=rules.length) {\n\t\t\t\tstack.pop();\n\t\t\t\tlet len = stack.length;\n\t\t\t\tif (len > 0) {\n\t\t\t\t\tcurrent = stack[len - 1];\n\t\t\t\t\trules = current[1];\n\t\t\t\t\tj = current[0];\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcurrent[0] = j;\n\t\t\tlet rule = rules[j];\n\t\t\tif (rule.type !== 1) {\n\t\t\t\tif (rule.cssRules && rule.cssRules.length>0) {\n\t\t\t\t\tstack.push([0, rule.cssRules]);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet r = iterator(rule, context);\n\t\t\tif (r!==undefined) context = r;\n\t\t}\n\t}\n\treturn context;\n}\n\nfunction replaceRule(rule, newRule) {\n\tlet sheet = rule.parentStyleSheet,\n\t\tparent = rule.parentRule,\n\t\trules = (parent || sheet).cssRules,\n\t\tindex = rules.length - 1;\n\tfor (let i=0; i<=index; i++) {\n\t\tif (rules[i] === rule) {\n\t\t\t(parent || sheet).deleteRule(i);\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (newRule!=null) {\n\t\tif (parent) {\n\t\t\tlet index = parent.appendRule(newRule);\n\t\t\treturn parent.cssRules[index];\n\t\t}\n\t\tsheet.insertRule(newRule, index);\n\t\treturn sheet.cssRules[index];\n\t}\n}\n\n// Replace paint(id) with url(data:image/paint-id) for a newly detected stylesheet\nfunction processNewSheet(node) {\n\tif (node.$$isPaint) return;\n\n\tif (node.href) {\n\t\tfetchText(node.href, processRemoteSheet);\n\t\treturn false;\n\t}\n\n\tfor (let i=node.childNodes.length; i--; ) {\n\t\tlet css = node.childNodes[i].nodeValue;\n\t\tlet escaped = escapePaintRules(css);\n\t\tif (escaped !== css) {\n\t\t\tnode.childNodes[i].nodeValue = escaped;\n\t\t}\n\t}\n}\n\nfunction processRemoteSheet(css) {\n\tconst parent = styleIsolationFrame.contentWindow.document.body;\n\n\tlet style = document.createElement('style');\n\tstyle.media = 'print';\n\tstyle.$$paintid = ++styleSheetCounter;\n\tstyle.appendChild(document.createTextNode(escapePaintRules(css)));\n\tparent.appendChild(style);\n\n\tlet newSheet = '';\n\twalkStyles(style.sheet, (rule) => {\n\t\tif (rule.type !== 1) return;\n\t\tlet css = '';\n\t\tfor (let i=0; i<rule.style.length; i++) {\n\t\t\tconst prop = rule.style.item(i);\n\t\t\tconst value = rule.style.getPropertyValue(prop);\n\t\t\tif (HAS_PAINT.test(value)) {\n\t\t\t\tcss = `${prop}: ${value}${rule.style.getPropertyPriority(prop)};`;\n\t\t\t}\n\t\t}\n\t\tif (!css) return;\n\t\tcss = `${rule.selectorText}{${css}}`;\n\t\t// wrap the StyleRule in any parent ConditionalRules (media queries, etc):\n\t\tlet r = rule;\n\t\twhile ((r = r.parentRule)) {\n\t\t\tcss = `${r.cssText.match(/^[\\s\\S]+?\\{/)[0]}${css}}`;\n\t\t}\n\t\tnewSheet += css;\n\t});\n\n\tparent.removeChild(style);\n\n\tif (newSheet) {\n\t\tconst pageStyles = document.createElement('style');\n\t\tpageStyles.$$paintid = styleSheetCounter;\n\t\tpageStyles.appendChild(document.createTextNode(newSheet));\n\t\troot.appendChild(pageStyles);\n\t}\n\n\tupdate();\n}\n\nfunction escapePaintRules(css) {\n\treturn css.replace(/(;|,|\\b)paint\\s*\\(\\s*(['\"]?)(.+?)\\2\\s*\\)(;|,|!|\\b)/g, '$1url(data:image/paint-$3,=)$4');\n}\n\nlet updateQueue = [];\nfunction queueUpdate(element, forceInvalidate) {\n\tif (forceInvalidate) {\n\t\telement.$$paintObservedProperties = null;\n\t}\n\tif (element.$$paintPending===true) return;\n\telement.$$paintPending = true;\n\tif (updateQueue.indexOf(element) === -1 && updateQueue.push(element) === 1) {\n\t\tdefer(processUpdateQueue);\n\t}\n}\nfunction processUpdateQueue() {\n\tlet el;\n\twhile ((el = updateQueue.pop())) {\n\t\tmaybeUpdateElement(el);\n\t}\n}\n\nfunction processItem(selector, forceInvalidate) {\n\ttry {\n\t\tlet sel = document.querySelectorAll(selector);\n\t\tfor (let i=0; i<sel.length; i++) queueUpdate(sel[i], forceInvalidate);\n\t}\n\tcatch (e) {}\n}\n\nfunction loadImages(images, callback, args) {\n\tlet count = images.length;\n\tlet onload = () => {\n\t\tif (--count) return;\n\t\tcallback.apply(null, args || EMPTY_ARRAY);\n\t};\n\tfor (let i=0; i<images.length; i++) {\n\t\tlet img = new Image();\n\t\timg.onload = onload;\n\t\timg.onerror = onerror;\n\t\timg.src = images[i];\n\t}\n}\n\nfunction ensurePaintId(element) {\n\tlet paintId = element.$$paintId;\n\tif (paintId==null) {\n\t\tpaintId = element.$$paintId = ++idCounter;\n\t\tpatchCssText(element);\n\t}\n\treturn paintId;\n}\n\nfunction getPaintRuleForElement(element) {\n\tlet paintRule = element.$$paintRule,\n\t\tpaintId = ensurePaintId(element);\n\tif (paintRule==null) {\n\t\tif (!element.hasAttribute('data-css-paint')) {\n\t\t\telement.setAttribute('data-css-paint', paintId);\n\t\t}\n\t\tlet index = overrideStyles.insertRule(`[data-css-paint=\"${idCounter}\"] {}`, overrideStyles.cssRules.length);\n\t\tpaintRule = element.$$paintRule = overrideStyles.cssRules[index];\n\t}\n\treturn paintRule;\n}\n\nfunction getCssText(style) {\n\tlet text = style.cssText;\n\tif (text) return text;\n\ttext = '';\n\tfor (let i=0, prop; i<style.length; i++) {\n\t\tprop = style[i];\n\t\tif (i!==0) text += ' ';\n\t\ttext += prop;\n\t\ttext += ':';\n\t\ttext += style.getPropertyValue(prop);\n\t\ttext += ';';\n\t}\n\treturn text;\n}\n\nfunction maybeUpdateElement(element) {\n\tlet computed = getComputedStyle(element);\n\tif (element.$$paintObservedProperties) {\n\t\tfor (let i=0; i<element.$$paintObservedProperties.length; i++) {\n\t\t\tlet prop = element.$$paintObservedProperties[i];\n\t\t\tif (computed.getPropertyValue(prop).trim() !== element.$$paintedPropertyValues[prop].trim()) {\n\t\t\t\tupdateElement(element, computed);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse if (element.$$paintId || HAS_PAINT.test(getCssText(computed))) {\n\t\tupdateElement(element, computed);\n\t\treturn;\n\t}\n\n\telement.$$paintPending = false;\n}\n\nlet currentProperties, propertyContainerCache;\nconst propertiesContainer = {\n\tget(name) {\n\t\tif (name in propertyContainerCache) return propertyContainerCache[name];\n\t\treturn propertyContainerCache[name] = currentProperties.getPropertyValue(name);\n\t}\n};\n\nlet idCounter = 0;\nfunction updateElement(element, computedStyle) {\n\toverridesStylesheet.disabled = true;\n\tlet style = currentProperties = computedStyle==null ? getComputedStyle(element) : computedStyle;\n\t// element.$$paintGeom = style;\n\tpropertyContainerCache = {};\n\tlet paintRule;\n\tlet observedProperties = [];\n\n\telement.$$paintPending = false;\n\n\t// @TODO get computed styles and precompute geometry in a rAF after first paint, then re-use w/ invalidation\n\tlet elementGeometry = {\n\t\twidth: element.clientWidth,\n\t\theight: element.clientHeight\n\t};\n\n\tlet dpr = getDevicePixelRatio();\n\n\tlet paintedProperties = element.$$paintedProperties;\n\n\tfor (let i=0; i<style.length; i++) {\n\t\tlet property = style[i],\n\t\t\tvalue = propertiesContainer.get(property),\n\t\t\treg = /(,|\\b|^)url\\((['\"]?)((?:-moz-element\\(#|-webkit-canvas\\()paint-\\d+-([^;,]+)\\)|(?:data:image\\/paint-|blob:[^'\"#]+#paint=)([^\"';, ]+)(?:[;,].*?)?)\\2\\)(;|,|\\s|\\b|$)/g,\n\t\t\tnewValue = '',\n\t\t\tindex = 0,\n\t\t\turls = [],\n\t\t\thasChanged = false,\n\t\t\thasPaints = false,\n\t\t\tpaintId,\n\t\t\ttoken,\n\t\t\tgeom = elementGeometry;\n\t\t\n\t\t// Support CSS Border Images\n\t\tif (/border-image/.test(property)) {\n\t\t\tlet w = geom.width;\n\t\t\tlet h = geom.height;\n\n\t\t\tconst slice = parseCssDimensions(\n\t\t\t\tpropertiesContainer\n\t\t\t\t\t.get('border-image-slice')\n\t\t\t\t\t.replace(/\\sfill/, '')\n\t\t\t\t\t.split(' ')\n\t\t\t);\n\t\t\tw -= applyDimensions(w, slice.left) + applyDimensions(w, slice.right);\n\t\t\th -= applyDimensions(h, slice.top) + applyDimensions(h, slice.bottom);\n\n\t\t\tconst outset = parseCssDimensions(propertiesContainer.get('border-image-outset').split(' '));\n\t\t\tw = applyDimensions(applyDimensions(w, outset.left), outset.right);\n\t\t\th = applyDimensions(applyDimensions(h, outset.top), outset.bottom);\n\n\t\t\tgeom = { width: w, height: h };\n\t\t}\n\n\t\twhile ((token = reg.exec(value))) {\n\t\t\tif (hasPaints === false) {\n\t\t\t\tpaintId = ensurePaintId(element);\n\t\t\t}\n\n\t\t\thasPaints = true;\n\t\t\tnewValue += value.substring(0, token.index);\n\t\t\tlet painterName = token[4] || token[5];\n\t\t\tlet currentUri = token[3];\n\t\t\tlet painter = getPainter(painterName);\n\t\t\tlet contextOptions = painter && painter.Painter.contextOptions || {};\n\t\t\tlet equivalentDpr = contextOptions.scaling === false ? 1 : dpr;\n\n\t\t\tlet inst;\n\t\t\tif (painter) {\n\t\t\t\tif (painter.Painter.inputProperties) {\n\t\t\t\t\tobservedProperties.push.apply(observedProperties, painter.Painter.inputProperties);\n\t\t\t\t}\n\t\t\t\tinst = getPainterInstance(painter);\n\t\t\t}\n\n\t\t\tif (contextOptions.nativePixels===true) {\n\t\t\t\tgeom.width *= dpr;\n\t\t\t\tgeom.height *= dpr;\n\t\t\t\tequivalentDpr = 1;\n\t\t\t}\n\n\t\t\tlet actualWidth = equivalentDpr * geom.width,\n\t\t\t\tactualHeight = equivalentDpr * geom.height;\n\n\t\t\tlet ctx = element.$$paintContext,\n\t\t\t\tcssContextId = `paint-${paintId}-${painterName}`;\n\t\t\tif (!ctx || !ctx.canvas || ctx.canvas.width!=actualWidth || ctx.canvas.height!=actualHeight) {\n\t\t\t\tif (USE_CSS_CANVAS_CONTEXT===true) {\n\t\t\t\t\tctx = document.getCSSCanvasContext('2d', cssContextId, actualWidth, actualHeight);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet canvas = ctx && ctx.canvas;\n\t\t\t\t\tlet shouldAppend = false;\n\t\t\t\t\tif (!canvas) {\n\t\t\t\t\t\tcanvas = document.createElement('canvas');\n\t\t\t\t\t\tcanvas.id = cssContextId;\n\t\t\t\t\t\tshouldAppend = USE_CSS_ELEMENT;\n\t\t\t\t\t}\n\t\t\t\t\tcanvas.width = actualWidth;\n\t\t\t\t\tcanvas.height = actualHeight;\n\t\t\t\t\tif (shouldAppend) {\n\t\t\t\t\t\tcanvas.style.display = 'none';\n\t\t\t\t\t\troot.appendChild(canvas);\n\t\t\t\t\t}\n\t\t\t\t\tctx = canvas.getContext('2d');\n\t\t\t\t}\n\t\t\t\telement.$$paintContext = ctx;\n\t\t\t\tctx.imageSmoothingEnabled = false;\n\t\t\t\tif (equivalentDpr!==1) ctx.scale(equivalentDpr, equivalentDpr);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tctx.clearRect(0, 0, actualWidth, actualHeight);\n\n\t\t\t\t// This hack is no longer needed thanks to the closePath() fix\n\t\t\t\t// if (USE_CSS_CANVAS_CONTEXT===false) {\n\t\t\t\t// \tctx = ctx.canvas.getContext('2d');\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tif (inst) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.beginPath();\n\t\t\t\tinst.paint(ctx, geom, propertiesContainer);\n\t\t\t\t// Close any open path so clearRect() can dump everything\n\t\t\t\tctx.closePath();\n\t\t\t\t// ctx.stroke();  // useful to verify that the polyfill painted rather than native paint().\n\t\t\t\tctx.restore();\n\t\t\t\t// -webkit-canvas() is scaled based on DPI by default, we don't want to reset that.\n\t\t\t\tif (USE_CSS_CANVAS_CONTEXT===false && 'resetTransform' in ctx) {\n\t\t\t\t\tctx.resetTransform();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewValue += token[1];\n\n\t\t\tif (USE_CSS_CANVAS_CONTEXT===true) {\n\t\t\t\tnewValue += `-webkit-canvas(${cssContextId})`;\n\t\t\t\thasChanged = token[4]==null;\n\t\t\t}\n\t\t\telse if (USE_CSS_ELEMENT===true) {\n\t\t\t\tnewValue += `-moz-element(#${cssContextId})`;\n\t\t\t\thasChanged = token[4] == null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet uri = ctx.canvas.toDataURL('image/png').replace('/png', '/paint-' + painterName);\n\t\t\t\tif (typeof MSBlobBuilder==='function') {\n\t\t\t\t\turi = dataUrlToBlob(uri, painterName);\n\t\t\t\t}\n\t\t\t\t// let uri = ctx.canvas.toDataURL('image/bmp', 1).replace('/bmp', '/paint-' + painterName);\n\t\t\t\turls.push(uri);\n\t\t\t\tnewValue += 'url(\"' + uri + '\")';\n\t\t\t\tif (uri!==currentUri || !paintRule) {\n\t\t\t\t\tlet j = currentUri ? currentUri.indexOf('#') : -1;\n\t\t\t\t\tif (~j) URL.revokeObjectURL(currentUri.substring(0, j));\n\t\t\t\t\thasChanged = true;\n\t\t\t\t}\n\t\t\t\tcurrentUri = uri;\n\t\t\t}\n\n\t\t\tnewValue += token[6];\n\t\t\tindex = token.index + token[0].length;\n\t\t}\n\n\t\tif (hasPaints===false && paintedProperties!=null && paintedProperties[property]!=null) {\n\t\t\tif (!paintRule) paintRule = getPaintRuleForElement(element);\n\t\t\tpaintRule.style.removeProperty(property);\n\t\t\tcontinue;\n\t\t}\n\n\t\tnewValue += value.substring(index);\n\t\tif (hasChanged) {\n\t\t\tif (!paintRule) paintRule = getPaintRuleForElement(element);\n\n\t\t\tif (paintedProperties==null) {\n\t\t\t\tpaintedProperties = element.$$paintedProperties = {};\n\t\t\t}\n\t\t\tpaintedProperties[property] = true;\n\n\t\t\tif (property.substring(0, 10) === 'background' && dpr !== 1) {\n\t\t\t\tapplyStyleRule(paintRule.style, 'background-size', `${geom.width}px ${geom.height}px`);\n\t\t\t}\n\n\t\t\tif (urls.length===0) {\n\t\t\t\tapplyStyleRule(paintRule.style, property, newValue);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadImages(urls, applyStyleRule, [paintRule.style, property, newValue]);\n\t\t\t}\n\t\t}\n\t}\n\n\telement.$$paintObservedProperties = observedProperties.length===0 ? null : observedProperties;\n\tlet propertyValues = element.$$paintedPropertyValues = {};\n\tfor (let i=0; i<observedProperties.length; i++) {\n\t\tlet prop = observedProperties[i];\n\t\t// use propertyContainer here to select cached values\n\t\tpropertyValues[prop] = propertiesContainer.get(prop);\n\t}\n\n\toverridesStylesheet.disabled = false;\n}\n\nfunction dataUrlToBlob(dataUrl, name) {\n\tlet bin = atob(dataUrl.split(',')[1]),\n\t\tarr = new Uint8Array(bin.length);\n\tfor (let i=0; i<bin.length; i++) arr[i] = bin.charCodeAt(i);\n\treturn URL.createObjectURL(new Blob([arr])) + '#paint=' + name;\n}\n\nfunction applyStyleRule(style, property, value) {\n\tstyle.setProperty(property, value, 'important');\n}\n\nfunction patchCssText(element) {\n\tif (supportsStyleMutations===true) return;\n\tif (element.style.ownerElement===element) return;\n\tdefineProperty(element.style, 'ownerElement', { value: element });\n}\n\n// apply a dimension offset to a base unit value (used for computing border-image sizes)\nfunction applyDimensions(base, dim) {\n\tlet v = parseFloat(dim);\n\tif (!dim) return base;\n\tif (dim.match('px')) return base + v;\n\tif (dim.match('%')) v /= 100;\n\treturn base * v;\n}\n\n// Compute dimensions from a CSS unit group\nfunction parseCssDimensions(arr) {\n\treturn {\n\t\ttop: arr[0],\n\t\tbottom: arr[2] || arr[0],\n\t\tleft: arr[3] || arr[1] || arr[0],\n\t\tright: arr[1] || arr[0]\n\t};\n}\n\nclass PaintWorklet {\n\tconstructor() {\n\t\traf(update);\n\n\t\tlet a = document.createElement('x-a');\n\t\tdocument.body.appendChild(a);\n\n\t\tlet supportsStyleMutations = false;\n\n\t\tlet lock = false;\n\t\tnew MutationObserver(records => {\n\t\t\tif (lock===true) return;\n\t\t\tlock = true;\n\t\t\tfor (let i = 0; i < records.length; i++) {\n\t\t\t\tlet record = records[i], added;\n\t\t\t\t// Ignore all inline SVG mutations:\n\t\t\t\tif (record.target && 'ownerSVGElement' in record.target) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (record.type === 'childList' && (added = record.addedNodes)) {\n\t\t\t\t\tfor (let j = 0; j < added.length; j++) {\n\t\t\t\t\t\tif (added[j].nodeType === 1) {\n\t\t\t\t\t\t\tqueueUpdate(added[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (record.type==='attributes' && record.target.nodeType === 1) {\n\t\t\t\t\tif (record.target === a) {\n\t\t\t\t\t\tsupportsStyleMutations = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twalk(record.target, queueUpdate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlock = false;\n\t\t}).observe(document.body, {\n\t\t\tchildList: true,\n\t\t\tattributes: true,\n\t\t\tsubtree: true\n\t\t});\n\n\t\ta.style.cssText = 'color: red;';\n\t\tsetTimeout( () => {\n\t\t\tdocument.body.removeChild(a);\n\t\t\tif (!supportsStyleMutations) {\n\t\t\t\tlet styleDesc = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'style');\n\t\t\t\tconst oldStyleGetter = styleDesc.get;\n\t\t\t\tstyleDesc.get = function() {\n\t\t\t\t\tconst style = oldStyleGetter.call(this);\n\t\t\t\t\tstyle.ownerElement = this;\n\t\t\t\t\treturn style;\n\t\t\t\t};\n\t\t\t\tdefineProperty(HTMLElement.prototype, 'style', styleDesc);\n\n\t\t\t\tlet cssTextDesc = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, 'cssText');\n\t\t\t\tlet oldSet = cssTextDesc.set;\n\t\t\t\tcssTextDesc.set = function (value) {\n\t\t\t\t\tif (this.ownerElement) queueUpdate(this.ownerElement);\n\t\t\t\t\treturn oldSet.call(this, value);\n\t\t\t\t};\n\t\t\t\tdefineProperty(CSSStyleDeclaration.prototype, 'cssText', cssTextDesc);\n\n\t\t\t\tlet setPropertyDesc = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, 'setProperty');\n\t\t\t\tlet oldSetProperty = setPropertyDesc.value;\n\t\t\t\tsetPropertyDesc.value = function (name, value, priority) {\n\t\t\t\t\tif (this.ownerElement) queueUpdate(this.ownerElement);\n\t\t\t\t\toldSetProperty.call(this, name, value, priority);\n\t\t\t\t};\n\t\t\t\tdefineProperty(CSSStyleDeclaration.prototype, 'setProperty', setPropertyDesc);\n\t\t\t}\n\t\t});\n\t}\n\n\taddModule(url) {\n\t\tlet p, resolve;\n\t\tif (HAS_PROMISE) {\n\t\t\tp = new Promise((r) => resolve = r);\n\t\t}\n\n\t\tfetchText(url, code => {\n\t\t\tlet context = {\n\t\t\t\tregisterPaint(name, Painter) {\n\t\t\t\t\tregisterPaint(name, Painter, {\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\trealm\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tdefineProperty(context, 'devicePixelRatio', {\n\t\t\t\tget: getDevicePixelRatio\n\t\t\t});\n\t\t\tcontext.self = context;\n\t\t\tlet realm = new Realm(context, root);\n\n\t\t\tcode = (this.transpile || String)(code);\n\n\t\t\trealm.exec(code);\n\t\t\tif (resolve) resolve();\n\t\t});\n\n\t\treturn p;\n\t}\n}","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function Realm(scope, parentElement) {\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999px; width:1px; height:1px;';\n\tparentElement.appendChild(frame);\n\tlet win = frame.contentWindow,\n\t\tdoc = win.document,\n\t\tvars = 'var window,$hook';\n\tfor (let i in win) {\n\t\tif (!(i in scope) && i!=='eval') {\n\t\t\tvars += ',';\n\t\t\tvars += i;\n\t\t}\n\t}\n\tfor (let i in scope) {\n\t\tvars += ',';\n\t\tvars += i;\n\t\tvars += '=self.';\n\t\tvars += i;\n\t}\n\tlet script = doc.createElement('script');\n\tscript.appendChild(doc.createTextNode(\n\t\t`function $hook(self,console) {\"use strict\";\n\t\t${vars};return function() {return eval(arguments[0])}}`\n\t));\n\tdoc.body.appendChild(script);\n\tthis.exec = win.$hook(scope, console);\n\t// this.destroy = () => { parentElement.removeChild(frame); };\n}\n"],"names":["fetchText","url","callback","let","xhr","XMLHttpRequest","onreadystatechange","readyState","responseText","open","send","defineProperty","obj","name","def","Object","get","paintWorklet","window","CSS","PaintWorklet","const","GLOBAL_ID","root","document","createElement","style","cssText","documentElement","appendChild","styleIsolationFrame","overridesStylesheet","id","$$isPaint","overrideStyles","sheet","testStyles","EMPTY_ARRAY","HAS_PAINT","USE_CSS_CANVAS_CONTEXT","USE_CSS_ELEMENT","backgroundImage","HAS_PROMISE","Promise","raf","requestAnimationFrame","setTimeout","defer","prototype","then","bind","resolve","getDevicePixelRatio","devicePixelRatio","painters","trackedRules","styleSheetCounter","getPainterInstance","painter","inst","bit","instances","Painter","paintRuleWalker","rule","context","css","isNew","test","escapePaintRules","newRule","parentStyleSheet","parent","parentRule","rules","cssRules","index","length","i","deleteRule","appendRule","insertRule","replaceRule","key","cached","selector","selectorText","getCssText","counters","sheetId","toProcess","push","toRemove","properties","walk","node","iterator","child","firstElementChild","nextElementSibling","update","sheets","slice","call","styleSheets","ownerNode","e","$$paintid","processNewSheet","walkStyles","processItem","join","stack","current","j","pop","len","type","r","undefined","href","processRemoteSheet","childNodes","nodeValue","escaped","contentWindow","body","media","createTextNode","newSheet","prop","item","value","getPropertyValue","getPropertyPriority","match","removeChild","pageStyles","replace","addEventListener","currentProperties","propertyContainerCache","updateQueue","queueUpdate","element","forceInvalidate","$$paintObservedProperties","$$paintPending","indexOf","processUpdateQueue","el","maybeUpdateElement","sel","querySelectorAll","loadImages","images","args","count","onload","apply","img","Image","onerror","src","ensurePaintId","paintId","$$paintId","idCounter","getPaintRuleForElement","paintRule","$$paintRule","hasAttribute","setAttribute","text","computed","getComputedStyle","trim","$$paintedPropertyValues","updateElement","propertiesContainer","computedStyle","disabled","observedProperties","elementGeometry","width","clientWidth","height","clientHeight","dpr","paintedProperties","$$paintedProperties","property","reg","newValue","urls","hasChanged","hasPaints","token","geom","w","h","parseCssDimensions","split","applyDimensions","left","right","top","bottom","outset","exec","substring","painterName","currentUri","contextOptions","equivalentDpr","scaling","inputProperties","nativePixels","actualWidth","actualHeight","ctx","$$paintContext","cssContextId","canvas","clearRect","getCSSCanvasContext","shouldAppend","display","getContext","imageSmoothingEnabled","scale","save","beginPath","paint","closePath","restore","resetTransform","uri","toDataURL","MSBlobBuilder","dataUrlToBlob","URL","revokeObjectURL","applyStyleRule","removeProperty","propertyValues","dataUrl","bin","atob","arr","Uint8Array","charCodeAt","createObjectURL","Blob","setProperty","base","dim","v","parseFloat","a","supportsStyleMutations","lock","MutationObserver","records","record","added","target","addedNodes","nodeType","observe","styleDesc","getOwnPropertyDescriptor","HTMLElement","oldStyleGetter","this","ownerElement","cssTextDesc","CSSStyleDeclaration","oldSet","set","setPropertyDesc","oldSetProperty","priority","addModule","p","code","registerPaint","worklet","realm","self","scope","parentElement","frame","win","doc","vars","script","transpile","String"],"mappings":"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"}